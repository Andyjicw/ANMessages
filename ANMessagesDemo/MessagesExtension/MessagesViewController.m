//
//  MessagesViewController.m
//  MessagesExtension
//
//  Author Andyjicw 479003573@qq.com
//
//  Created by andy on 10/10/2016.
//  Copyright Â© 2016 andy. All rights reserved.
//

#define TEST_URL @"http://220.231.200.166:8888/getFile.php"

#import "MessagesViewController.h"
#import "ANNetworkMessage.h"


@interface MessagesViewController ()

@property (nonatomic, strong) UIButton *imgBtn;

@end

@implementation MessagesViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.imgBtn = [[UIButton alloc] init];
    self.imgBtn.frame = CGRectMake(20, 20, 80, 80);
    self.imgBtn.backgroundColor = [UIColor grayColor];
    [self.imgBtn addTarget:self action:@selector(xxx) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:self.imgBtn];
    [self testGETFILE];
}

#pragma mark - testGETFILE
- (void)xxx {

    MSSticker *sticker = [[MSSticker alloc] initWithContentsOfFileURL:[NSURL URLWithString:@"http://220.231.200.166:8888/123.png"]
                                                 localizedDescription:@"kUTTypePNG"
                                                                error:nil];
    [self.activeConversation insertSticker:sticker
                         completionHandler:^(NSError * _Nullable err) {
                             //
                             NSLog(@"err:%@", err);
                         }];
    
//    [self.activeConversation insertText:@"123" completionHandler:^(NSError * _Nullable err) {
//        //
//    }];
}
- (void)testGETFILE {
    [GETFILE withUrl:TEST_URL
             success:^(id result) {
                 [self.imgBtn setImage:[UIImage imageWithData:result] forState:UIControlStateNormal];
             }
             failure:^(NSError *error) {
                 // failure to do
             }];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Conversation Handling

-(void)didBecomeActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the inactive to active state.
    // This will happen when the extension is about to present UI.
    
    // Use this method to configure the extension and restore previously stored state.
    NSLog(@"didBecomeActiveWithConversation");
}

-(void)willResignActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the active to inactive state.
    // This will happen when the user dissmises the extension, changes to a different
    // conversation or quits Messages.
    
    // Use this method to release shared resources, save user data, invalidate timers,
    // and store enough state information to restore your extension to its current state
    // in case it is terminated later.
    NSLog(@"willResignActiveWithConversation");
}

-(void)didReceiveMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when a message arrives that was generated by another instance of this
    // extension on a remote device.
    
    // Use this method to trigger UI updates in response to the message.
    NSLog(@"didReceiveMessage");
}

-(void)didStartSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user taps the send button.
    NSLog(@"didStartSendingMessage");
}

-(void)didCancelSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user deletes the message without sending it.
    
    // Use this to clean up state related to the deleted message.
    NSLog(@"didCancelSendingMessage");
}

-(void)willTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called before the extension transitions to a new presentation style.
    
    // Use this method to prepare for the change in presentation style.
    NSLog(@"willTransitionToPresentationStyle");
}

-(void)didTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called after the extension transitions to a new presentation style.
    
    // Use this method to finalize any behaviors associated with the change in presentation style.
    NSLog(@"didTransitionToPresentationStyle");
}

@end
